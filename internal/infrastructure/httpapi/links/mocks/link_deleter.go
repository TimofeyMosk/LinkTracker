// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	domain "LinkTracker/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// LinkDeleter is an autogenerated mock type for the LinkDeleter type
type LinkDeleter struct {
	mock.Mock
}

type LinkDeleter_Expecter struct {
	mock *mock.Mock
}

func (_m *LinkDeleter) EXPECT() *LinkDeleter_Expecter {
	return &LinkDeleter_Expecter{mock: &_m.Mock}
}

// DeleteLink provides a mock function with given fields: id, link
func (_m *LinkDeleter) DeleteLink(id int64, link domain.Link) (domain.Link, error) {
	ret := _m.Called(id, link)

	if len(ret) == 0 {
		panic("no return value specified for DeleteLink")
	}

	var r0 domain.Link
	var r1 error
	if rf, ok := ret.Get(0).(func(int64, domain.Link) (domain.Link, error)); ok {
		return rf(id, link)
	}
	if rf, ok := ret.Get(0).(func(int64, domain.Link) domain.Link); ok {
		r0 = rf(id, link)
	} else {
		r0 = ret.Get(0).(domain.Link)
	}

	if rf, ok := ret.Get(1).(func(int64, domain.Link) error); ok {
		r1 = rf(id, link)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LinkDeleter_DeleteLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteLink'
type LinkDeleter_DeleteLink_Call struct {
	*mock.Call
}

// DeleteLink is a helper method to define mock.On call
//   - id int64
//   - link domain.Link
func (_e *LinkDeleter_Expecter) DeleteLink(id interface{}, link interface{}) *LinkDeleter_DeleteLink_Call {
	return &LinkDeleter_DeleteLink_Call{Call: _e.mock.On("DeleteLink", id, link)}
}

func (_c *LinkDeleter_DeleteLink_Call) Run(run func(id int64, link domain.Link)) *LinkDeleter_DeleteLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int64), args[1].(domain.Link))
	})
	return _c
}

func (_c *LinkDeleter_DeleteLink_Call) Return(_a0 domain.Link, _a1 error) *LinkDeleter_DeleteLink_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *LinkDeleter_DeleteLink_Call) RunAndReturn(run func(int64, domain.Link) (domain.Link, error)) *LinkDeleter_DeleteLink_Call {
	_c.Call.Return(run)
	return _c
}

// NewLinkDeleter creates a new instance of LinkDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLinkDeleter(t interface {
	mock.TestingT
	Cleanup(func())
}) *LinkDeleter {
	mock := &LinkDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
