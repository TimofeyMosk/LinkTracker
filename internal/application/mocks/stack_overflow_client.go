// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// StackOverflowClient is an autogenerated mock type for the StackOverflowClient type
type StackOverflowClient struct {
	mock.Mock
}

type StackOverflowClient_Expecter struct {
	mock *mock.Mock
}

func (_m *StackOverflowClient) EXPECT() *StackOverflowClient_Expecter {
	return &StackOverflowClient_Expecter{mock: &_m.Mock}
}

// GetLatestAnswerOrComment provides a mock function with given fields: link
func (_m *StackOverflowClient) GetLatestAnswerOrComment(link string) (time.Time, string, error) {
	ret := _m.Called(link)

	if len(ret) == 0 {
		panic("no return value specified for GetLatestAnswerOrComment")
	}

	var r0 time.Time
	var r1 string
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (time.Time, string, error)); ok {
		return rf(link)
	}
	if rf, ok := ret.Get(0).(func(string) time.Time); ok {
		r0 = rf(link)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(link)
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(link)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// StackOverflowClient_GetLatestAnswerOrComment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetLatestAnswerOrComment'
type StackOverflowClient_GetLatestAnswerOrComment_Call struct {
	*mock.Call
}

// GetLatestAnswerOrComment is a helper method to define mock.On call
//   - link string
func (_e *StackOverflowClient_Expecter) GetLatestAnswerOrComment(link interface{}) *StackOverflowClient_GetLatestAnswerOrComment_Call {
	return &StackOverflowClient_GetLatestAnswerOrComment_Call{Call: _e.mock.On("GetLatestAnswerOrComment", link)}
}

func (_c *StackOverflowClient_GetLatestAnswerOrComment_Call) Run(run func(link string)) *StackOverflowClient_GetLatestAnswerOrComment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *StackOverflowClient_GetLatestAnswerOrComment_Call) Return(lastActivity time.Time, description string, err error) *StackOverflowClient_GetLatestAnswerOrComment_Call {
	_c.Call.Return(lastActivity, description, err)
	return _c
}

func (_c *StackOverflowClient_GetLatestAnswerOrComment_Call) RunAndReturn(run func(string) (time.Time, string, error)) *StackOverflowClient_GetLatestAnswerOrComment_Call {
	_c.Call.Return(run)
	return _c
}

// NewStackOverflowClient creates a new instance of StackOverflowClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStackOverflowClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *StackOverflowClient {
	mock := &StackOverflowClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
